APP_NAME=KPI
APP_ENV=local
APP_KEY=base64:CYV5jtDTT1rU1yED/1BDBNbB+YuNAPA8C7f+fgJqIQY=
APP_DEBUG=true
APP_TIMEZONE=UTC
APP_URL=127.0.0.1:8000

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
APP_MAINTENANCE_STORE=database

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug


DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3305
DB_DATABASE=kpi_percik
DB_USERNAME=root
DB_PASSWORD=Jtx12345678

SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

VITE_APP_NAME="${APP_NAME}"

API_PERCIK=https://api-percik.perciktours.com/api
API_PERCIK_KEY='YjIzMTE5NTg1ZDQ1MDJiYWMyMTJmMDZhZDAxMGY1MjM4NWNhOTQxOQ=='

#STATIC VARIABLE BY DATABASE
APP_GROUPDIV_MARKETING = 'GJisR86CsXDgOsU8xILF1715064101'

APP_PUBLIC_PORT=8081
MYSQL_PUBLIC_PORT=3305
REDIS_PUBLIC_PORT=6379

local-env:
	@echo "Generating .env file..."
	@echo APP_NAME=$(APP_NAME) > .env
	@echo APP_ENV=$(APP_ENV) >> .env
	@echo APP_KEY=$(APP_KEY) >> .env
	@echo APP_DEBUG=$(APP_DEBUG) >> .env
	@echo APP_TIMEZONE=$(APP_TIMEZONE) >> .env
	@echo APP_URL=$(APP_URL) >> .env
	@echo APP_LOCALE=$(APP_LOCALE) >> .env
	@echo APP_FALLBACK_LOCALE=$(APP_FALLBACK_LOCALE) >> .env
	@echo APP_FAKER_LOCALE=$(APP_FAKER_LOCALE) >> .env
	@echo APP_MAINTENANCE_DRIVER=$(APP_MAINTENANCE_DRIVER) >> .env
	@echo APP_MAINTENANCE_STORE=$(APP_MAINTENANCE_STORE) >> .env
	@echo BCRYPT_ROUNDS=$(BCRYPT_ROUNDS) >> .env
	@echo LOG_CHANNEL=$(LOG_CHANNEL) >> .env
	@echo LOG_STACK=$(LOG_STACK) >> .env
	@echo LOG_DEPRECATIONS_CHANNEL=$(LOG_DEPRECATIONS_CHANNEL) >> .env
	@echo LOG_LEVEL=$(LOG_LEVEL) >> .env
	@echo DB_CONNECTION=$(DB_CONNECTION) >> .env
	@echo DB_HOST=$(DB_HOST) >> .env
	@echo DB_PORT=$(DB_PORT) >> .env
	@echo DB_DATABASE=$(DB_DATABASE) >> .env
	@echo DB_USERNAME=$(DB_USERNAME) >> .env
	@echo DB_PASSWORD=$(DB_PASSWORD) >> .env
	@echo SESSION_DRIVER=$(SESSION_DRIVER) >> .env
	@echo SESSION_LIFETIME=$(SESSION_LIFETIME) >> .env
	@echo SESSION_ENCRYPT=$(SESSION_ENCRYPT) >> .env
	@echo SESSION_PATH=$(SESSION_PATH) >> .env
	@echo SESSION_DOMAIN=$(SESSION_DOMAIN) >> .env
	@echo BROADCAST_CONNECTION=$(BROADCAST_CONNECTION) >> .env
	@echo FILESYSTEM_DISK=$(FILESYSTEM_DISK) >> .env
	@echo QUEUE_CONNECTION=$(QUEUE_CONNECTION) >> .env
	@echo CACHE_STORE=$(CACHE_STORE) >> .env
	@echo CACHE_PREFIX=$(CACHE_PREFIX) >> .env
	@echo MEMCACHED_HOST=$(MEMCACHED_HOST) >> .env
	@echo REDIS_CLIENT=$(REDIS_CLIENT) >> .env
	@echo REDIS_HOST=$(REDIS_HOST) >> .env
	@echo REDIS_PASSWORD=$(REDIS_PASSWORD) >> .env
	@echo REDIS_PORT=$(REDIS_PORT) >> .env
	@echo MAIL_MAILER=$(MAIL_MAILER) >> .env
	@echo MAIL_HOST=$(MAIL_HOST) >> .env
	@echo MAIL_PORT=$(MAIL_PORT) >> .env
	@echo MAIL_USERNAME=$(MAIL_USERNAME) >> .env
	@echo MAIL_PASSWORD=$(MAIL_PASSWORD) >> .env
	@echo MAIL_ENCRYPTION=$(MAIL_ENCRYPTION) >> .env
	@echo MAIL_FROM_ADDRESS=$(MAIL_FROM_ADDRESS) >> .env
	@echo MAIL_FROM_NAME=$(MAIL_FROM_NAME) >> .env
	@echo VITE_APP_NAME=$(VITE_APP_NAME) >> .env
	@echo APP_PUBLIC_PORT=$(APP_PUBLIC_PORT) >> .env
	@echo MYSQL_PUBLIC_PORT=$(MYSQL_PUBLIC_PORT) >> .env
	@echo REDIS_PUBLIC_PORT=$(REDIS_PUBLIC_PORT) >> .env
	@echo ".env file generated successfully."

prod-env:
	@echo "Generating .env file..."
	@echo APP_NAME=$(APP_NAME) > .env
	@echo APP_ENV=production >> .env
	@echo APP_KEY=$(APP_KEY) >> .env
	@echo APP_DEBUG=false >> .env
	@echo APP_TIMEZONE=$(APP_TIMEZONE) >> .env
	@echo APP_URL=$(APP_URL) >> .env
	@echo APP_LOCALE=$(APP_LOCALE) >> .env
	@echo APP_FALLBACK_LOCALE=$(APP_FALLBACK_LOCALE) >> .env
	@echo APP_FAKER_LOCALE=$(APP_FAKER_LOCALE) >> .env
	@echo APP_MAINTENANCE_DRIVER=$(APP_MAINTENANCE_DRIVER) >> .env
	@echo APP_MAINTENANCE_STORE=$(APP_MAINTENANCE_STORE) >> .env
	@echo BCRYPT_ROUNDS=$(BCRYPT_ROUNDS) >> .env
	@echo LOG_CHANNEL=$(LOG_CHANNEL) >> .env
	@echo LOG_STACK=$(LOG_STACK) >> .env
	@echo LOG_DEPRECATIONS_CHANNEL=$(LOG_DEPRECATIONS_CHANNEL) >> .env
	@echo LOG_LEVEL=$(LOG_LEVEL) >> .env
	@echo DB_CONNECTION=$(DB_CONNECTION) >> .env
	@echo DB_HOST=$(DB_HOST) >> .env
	@echo DB_PORT=$(DB_PORT) >> .env
	@echo DB_DATABASE=$(DB_DATABASE) >> .env
	@echo DB_USERNAME=$(DB_USERNAME) >> .env
	@echo DB_PASSWORD=$(DB_PASSWORD) >> .env
	@echo SESSION_DRIVER=$(SESSION_DRIVER) >> .env
	@echo SESSION_LIFETIME=$(SESSION_LIFETIME) >> .env
	@echo SESSION_ENCRYPT=$(SESSION_ENCRYPT) >> .env
	@echo SESSION_PATH=$(SESSION_PATH) >> .env
	@echo SESSION_DOMAIN=$(SESSION_DOMAIN) >> .env
	@echo BROADCAST_CONNECTION=$(BROADCAST_CONNECTION) >> .env
	@echo FILESYSTEM_DISK=$(FILESYSTEM_DISK) >> .env
	@echo QUEUE_CONNECTION=$(QUEUE_CONNECTION) >> .env
	@echo CACHE_STORE=$(CACHE_STORE) >> .env
	@echo CACHE_PREFIX=$(CACHE_PREFIX) >> .env
	@echo MEMCACHED_HOST=$(MEMCACHED_HOST) >> .env
	@echo REDIS_CLIENT=$(REDIS_CLIENT) >> .env
	@echo REDIS_HOST=$(REDIS_HOST) >> .env
	@echo REDIS_PASSWORD=$(REDIS_PASSWORD) >> .env
	@echo REDIS_PORT=$(REDIS_PORT) >> .env
	@echo MAIL_MAILER=$(MAIL_MAILER) >> .env
	@echo MAIL_HOST=$(MAIL_HOST) >> .env
	@echo MAIL_PORT=$(MAIL_PORT) >> .env
	@echo MAIL_USERNAME=$(MAIL_USERNAME) >> .env
	@echo MAIL_PASSWORD=$(MAIL_PASSWORD) >> .env
	@echo MAIL_ENCRYPTION=$(MAIL_ENCRYPTION) >> .env
	@echo MAIL_FROM_ADDRESS=$(MAIL_FROM_ADDRESS) >> .env
	@echo MAIL_FROM_NAME=$(MAIL_FROM_NAME) >> .env
	@echo VITE_APP_NAME=$(VITE_APP_NAME) >> .env
	@echo APP_PUBLIC_PORT=$(APP_PUBLIC_PORT) >> .env
	@echo MYSQL_PUBLIC_PORT=$(MYSQL_PUBLIC_PORT) >> .env
	@echo REDIS_PUBLIC_PORT=$(REDIS_PUBLIC_PORT) >> .env
	@echo ".env file generated successfully."


build:
	docker-compose build

run-local: local-env
	docker-compose down && docker-compose up -d --build

start-local: local-env
	docker-compose down && docker-compose up --build

start-production: prod-env
	docker-compose down && docker-compose up -d --build

